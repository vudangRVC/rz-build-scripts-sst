diff --git a/conf/distro/ubuntu-tiny.conf b/conf/distro/ubuntu-tiny.conf
new file mode 100644
index 0000000..c434d4f
--- /dev/null
+++ b/conf/distro/ubuntu-tiny.conf
@@ -0,0 +1,20 @@
+require conf/distro/poky.conf
+
+DISTRO_NAME = "Renesas Tiny"
+DISTRO_VERSION = "5.1.1"
+DISTRO_CODENAME = "styhead"
+
+# remove all extra packages
+DISTRO_EXTRA_RDEPENDS = ""
+DISTRO_EXTRA_RRECOMMENDS = ""
+
+# skip sanity checking
+SKIP_META_VIRT_SANITY_CHECK = "1"
+SKIP_META_SECURITY_SANITY_CHECK = "1"
+SKIP_META_TPM_SANITY_CHECK = "1"
+
+# Just need those features to build
+DISTRO_FEATURES = "largefile wayland multiarch bluetooth opengl x11"
+
+# Disable python usage in opkg-utils since it won't build with tiny config
+PACKAGECONFIG:remove:pn-opkg-utils = "python"
diff --git a/include/core-image-renesas-qt.inc b/include/core-image-renesas-qt.inc
new file mode 100644
index 0000000..58eca79
--- /dev/null
+++ b/include/core-image-renesas-qt.inc
@@ -0,0 +1,50 @@
+### For cross-compile Qt ###
+inherit populate_sdk_qt5
+
+IMAGE_FEATURES:append = " \
+    dev-pkgs tools-sdk \
+    tools-debug debug-tweaks \
+"
+
+TOOLCHAIN_HOST_TASK:append = " nativesdk-bison nativesdk-flex nativesdk-python3-pycryptodome nativesdk-python3-pycryptodomex "
+
+TOOLCHAIN_HOST_TASK:append = " \
+    nativesdk-qttools-tools \
+    nativesdk-qtbase \
+    nativesdk-qtbase-dev \
+    nativesdk-perl-modules \
+    nativesdk-qtdeclarative-tools \
+    nativesdk-qtwayland-tools \
+"
+
+FEATURE_PACKAGES_tools-sdk += " packagegroup-qt5-toolchain-target kernel-devsrc "
+
+# Post process after installed sdk
+sdk_post_process () {
+    # Set up kernel for building kernel config now
+    echo "configuring scripts of kernel source for building .ko file..."
+    $SUDO_EXEC bash -c 'source "$0" && cd "${OECORE_TARGET_SYSROOT=}/usr/src/kernel" && make scripts' $target_sdk_dir/environment-setup-@REAL_MULTIMACH_TARGET_SYS@
+}
+SDK_POST_INSTALL_COMMAND:append = " ${sdk_post_process}"
+
+export SOURCE_DIR="${THISDIR}/environment-setup"
+append_setup () {
+    # Create a directory for qt.conf used in the eSDK population task
+    install -d ${SDK_OUTPUT}/${SDKPATH}/sysroots/${SDK_SYS}/usr/bin/qt5
+
+    # Create a directory for environment setup script
+    install -d ${SDK_OUTPUT}/${SDKPATH}/sysroots/${SDK_SYS}/environment-setup.d/
+    cp ${SOURCE_DIR}/environment-setup-append.sh ${SDK_OUTPUT}/${SDKPATH}/sysroots/${SDK_SYS}/environment-setup.d/
+}
+SDK_POSTPROCESS_COMMAND:prepend = " append_setup;"
+
+### For self-compile Qt ###
+setup_qt_env () {
+    if [ ! -e ${IMAGE_ROOTFS}/${sysconfdir}/profile.d/setup_qt_env ]
+    then
+        echo 'export PATH=$PATH:/usr/bin/qt5' > ${IMAGE_ROOTFS}${sysconfdir}/profile.d/setup_qt_env
+        echo 'export INCLUDEPATH=$INCLUDEPATH:/usr/include/qt5' >> ${IMAGE_ROOTFS}${sysconfdir}/profile.d/setup_qt_env
+    fi
+}
+
+ROOTFS_POSTPROCESS_COMMAND += 'setup_qt_env;'
diff --git a/recipes-core/images/renesas-ubuntu.bb b/recipes-core/images/renesas-ubuntu.bb
new file mode 100644
index 0000000..86fc204
--- /dev/null
+++ b/recipes-core/images/renesas-ubuntu.bb
@@ -0,0 +1,72 @@
+SUMMARY = "Custom RZPi Image"
+LICENSE = "MIT"
+require include/core-image-renesas-mmp.inc
+require include/core-image-renesas-qt.inc
+require include/core-image-renesas-base.inc
+inherit core-image
+
+MACHINE_FEATURES = "wifi bluetooth"
+
+INITRAMFS_IMAGE = ""
+
+IMAGE_CLASSES:remove = "qemuboot"
+PACKAGE_EXCLUDE += "qemuboot dnf run-postinsts rpm packagegroup-core-tools-debug packagegroup-core-sdk packagegroup-core-standalone-sdk-target"
+RDEPENDS:remove = "run-postinsts dnf rpm packagegroup-core-tools-debug packagegroup-core-sdk packagegroup-core-standalone-sdk-target"
+IMAGE_FEATURES:remove = "debug-tweaks dev-pkgs package-management tools-debug tools-sdk"
+
+TOOLCHAIN_TARGET_TASK = ""
+
+IMAGE_INSTALL:remove = " \
+    packagegroup-cross-canadian \
+    packagegroup-core-sdk \
+    packagegroup-core-ssh-openssh \
+    packagegroup-meta-networking \
+    packagegroup-core-x11-base \
+    packagegroup-core-nfs \
+    packagegroup-core-tools-testapps \
+    packagegroup-core-tools-debug \
+    packagegroup-multimedia-libs \
+    linux-firmware \
+    rpm \
+    python3 \
+    tk-lib \
+    tk \
+    xwayland \
+    packagegroup-base-extended \
+    apt \
+    dpkg \
+    apt-sources-config \
+    python3-tkinter \
+    kmscube \
+    glmark2 \
+    apitrace \
+    bash \
+    coreutils \
+    can-utils \
+    i2c-tools \
+    spitools \
+    python3-smbus \
+    python3-smbus2 \
+    ethtool \
+    iproute2 \
+    iperf3 \
+    libgpiod \
+    libgpiod-tools \
+    libgpiod-dev \
+"
+
+# Packages for Wi-Fi and BT support for sbc
+IMAGE_INSTALL:append = " \
+    lwb-fcc-firmware \
+    summit-supplicant-lwb \
+"
+
+CORE_IMAGE_EXTRA_INSTALL += " packagegroup-tools-bluetooth "
+IMAGE_FSTYPES = " tar.bz2"
+
+#copy file for ubuntu building script
+do_copy_file() {
+    cp "${DEPLOY_DIR_IMAGE}/target/images/rootfs/"*.tar.bz2 "${TOPDIR}/../../core-image-qt-rzpi.tar.bz2"
+}
+
+addtask copy_file after do_image_complete before do_build
diff --git a/recipes-extend/uenv/uenv_1.0.bb b/recipes-extend/uenv/uenv_1.0.bb
index dbb4052..49c0e8a 100644
--- a/recipes-extend/uenv/uenv_1.0.bb
+++ b/recipes-extend/uenv/uenv_1.0.bb
@@ -30,10 +30,6 @@ do_deploy () {
     install -m 0644 ${D}/boot/Readme.md ${DEPLOYDIR}
 }
 
-# Force the package to be redeployed for each target. This is essential
-# to ensure the Readme.md file is available in DEPLOYDIR, allowing it to be
-# installed into partition 1.
-# Without this, other targets may fail during the build process.
 do_deploy[nostamp] = "1"
 
 COMPATIBLE_MACHINE:rzg2l-sbc = "(rzg2l-sbc)"
diff --git a/recipes-kernel/linux-yocto/file/0001-rzg2l-sbc-Bring-compat_alloc_user_space-back.patch b/recipes-kernel/linux-yocto/file/0001-rzg2l-sbc-Bring-compat_alloc_user_space-back.patch
new file mode 100644
index 0000000..3f17513
--- /dev/null
+++ b/recipes-kernel/linux-yocto/file/0001-rzg2l-sbc-Bring-compat_alloc_user_space-back.patch
@@ -0,0 +1,80 @@
+From d6a110c325247fb6bf9872760f169139abe7b672 Mon Sep 17 00:00:00 2001
+From: Khanh Do Duy <khanh.do.yg@bp.renesas.com>
+Date: Wed, 4 Dec 2024 10:27:59 +0000
+Subject: [PATCH 1/2] rzg2l-sbc: Bring compat_alloc_user_space back
+Upstream-Status: Pending
+---
+ arch/arm64/include/asm/compat.h |  6 ++++++
+ include/linux/compat.h          |  2 ++
+ kernel/compat.c                 | 21 +++++++++++++++++++++
+ 3 files changed, 29 insertions(+)
+
+diff --git a/arch/arm64/include/asm/compat.h b/arch/arm64/include/asm/compat.h
+index ae904a1ad529..b9e2f6aa7077 100644
+--- a/arch/arm64/include/asm/compat.h
++++ b/arch/arm64/include/asm/compat.h
+@@ -27,6 +27,7 @@ typedef u16		compat_ipc_pid_t;
+ #include <linux/types.h>
+ #include <linux/sched.h>
+ #include <linux/sched/task_stack.h>
++#include <linux/uaccess.h>
+ 
+ #ifdef __AARCH64EB__
+ #define COMPAT_UTS_MACHINE	"armv8b\0\0"
+@@ -98,6 +99,11 @@ static inline int is_compat_thread(struct thread_info *thread)
+ 
+ long compat_arm_syscall(struct pt_regs *regs, int scno);
+ 
++static inline void __user *arch_compat_alloc_user_space(long len)
++{
++	return (void __user *)compat_user_stack_pointer() - len;
++}
++
+ #else /* !CONFIG_COMPAT */
+ 
+ static inline int is_compat_thread(struct thread_info *thread)
+diff --git a/include/linux/compat.h b/include/linux/compat.h
+index 56cebaff0c91..f30e617cc00b 100644
+--- a/include/linux/compat.h
++++ b/include/linux/compat.h
+@@ -541,6 +541,8 @@ extern long compat_arch_ptrace(struct task_struct *child, compat_long_t request,
+ 
+ struct epoll_event;	/* fortunately, this one is fixed-layout */
+ 
++extern void __user *compat_alloc_user_space(unsigned long len);
++
+ int compat_restore_altstack(const compat_stack_t __user *uss);
+ int __compat_save_altstack(compat_stack_t __user *, unsigned long);
+ #define unsafe_compat_save_altstack(uss, sp, label) do { \
+diff --git a/kernel/compat.c b/kernel/compat.c
+index fb50f29d9b36..f9f7a79e07c5 100644
+--- a/kernel/compat.c
++++ b/kernel/compat.c
+@@ -269,3 +269,24 @@ get_compat_sigset(sigset_t *set, const compat_sigset_t __user *compat)
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(get_compat_sigset);
++
++/*
++ * Allocate user-space memory for the duration of a single system call,
++ * in order to marshall parameters inside a compat thunk.
++ */
++void __user *compat_alloc_user_space(unsigned long len)
++{
++	void __user *ptr;
++
++	/* If len would occupy more than half of the entire compat space... */
++	if (unlikely(len > (((compat_uptr_t)~0) >> 1)))
++		return NULL;
++
++	ptr = arch_compat_alloc_user_space(len);
++
++	if (unlikely(!access_ok(ptr, len)))
++		return NULL;
++
++	return ptr;
++}
++EXPORT_SYMBOL_GPL(compat_alloc_user_space);
+-- 
+2.25.1
+
diff --git a/recipes-qt/packagegroups/packagegroup-qt5-toolchain-target.bbappend b/recipes-qt/packagegroups/packagegroup-qt5-toolchain-target.bbappend
new file mode 100644
index 0000000..dbce361
--- /dev/null
+++ b/recipes-qt/packagegroups/packagegroup-qt5-toolchain-target.bbappend
@@ -0,0 +1,34 @@
+#Do not use X11 if we are building for Wayland
+USE_X11 = " \
+    ${@bb.utils.contains('DISTRO_FEATURES', 'wayland', '${USE_WAYLAND}', 'qtx11extras-dev', d)} \
+    ${@bb.utils.contains('DISTRO_FEATURES', 'wayland', '${USE_WAYLAND}', 'qtx11extras-mkspecs', d)} \
+"
+
+RDEPENDS:${PN} += " \
+    qtbase-tools \
+    qtdeclarative-tools \
+    qtxmlpatterns-tools \
+    qtwayland-tools \
+"
+
+# meta-qt5 still use qtwebkit and qtquick1, although they are removed from Qt 5.6
+# Overwrite USE_RUBY to prevent using them
+USE_RUBY = " "
+
+# Remove qtsystems since it is actually not released with Qt5.0
+# # Remove qtenginio as it it not guarantee compatible with Qt5.6
+# # Also do not build qt3d and qtlocation by default due to their license (not
+# have LGPLv2.1)
+RDEPENDS:${PN}:remove = "qtsystems-dev"
+RDEPENDS:${PN}:remove = "qtsystems-mkspecs"
+RDEPENDS:${PN}:remove = "qtsystems-qmlplugins"
+RDEPENDS:${PN}:remove = "qtenginio-dev"
+RDEPENDS:${PN}:remove = "qtenginio-mkspecs"
+RDEPENDS:${PN}:remove = "qtenginio-qmlplugins"
+RDEPENDS:${PN}:remove = "qt3d-dev"
+RDEPENDS:${PN}:remove = "qt3d-mkspecs"
+RDEPENDS:${PN}:remove = "qt3d-qmlplugins"
+RDEPENDS:${PN}:remove = "qtlocation-dev"
+RDEPENDS:${PN}:remove = "qtlocation-mkspecs"
+RDEPENDS:${PN}:remove = "qtlocation-plugins"
+RDEPENDS:${PN}:remove = "qtlocation-qmlplugins"
diff --git a/recipes-qt/packagegroups/packagegroup-qt5.bb b/recipes-qt/packagegroups/packagegroup-qt5.bb
new file mode 100644
index 0000000..b3b46cb
--- /dev/null
+++ b/recipes-qt/packagegroups/packagegroup-qt5.bb
@@ -0,0 +1,60 @@
+# TODO add license
+DESCRIPTION = "All Demos Packages for Qt5"
+
+LICENSE = "MIT"
+
+inherit packagegroup
+
+PACKAGES = "\
+    packagegroup-qt5 \
+    packagegroup-qt5-examples \
+"
+
+ALLOW_EMPTY:${PN} = "1"
+
+# Requires Wayland to work
+QT5_WAYLAND_PACKAGES = " \
+    qtwayland \
+    qtwayland-plugins \
+    qtwayland-tools \
+"
+
+RDEPENDS:${PN} = " \
+    ${@bb.utils.contains("DISTRO_FEATURES", "wayland", "${QT5_WAYLAND_PACKAGES}", "", d)} \
+    qtbase \
+    qtbase-plugins \
+    qtbase-tools \
+    qtquickcontrols2 \
+    qtquickcontrols \
+    qtdeclarative \
+    qtdeclarative-tools \
+    qtdeclarative-qmlplugins \
+    qtmultimedia \
+    qtmultimedia-plugins \
+    qtmultimedia-qmlplugins \
+    qtsvg \
+    qtsvg-plugins \
+    qtsensors \
+    qtimageformats \
+    qtimageformats-plugins \
+    qtsystems \
+    qtsystems-tools \
+    qtsystems-qmlplugins \
+    qt3d \
+    qt3d-qmlplugins \
+    qtgraphicaleffects-qmlplugins \
+    qtconnectivity-qmlplugins \
+    qtlocation-plugins \
+    qtlocation-qmlplugins \
+    cinematicexperience \
+    qtserialbus \
+    qttools \
+    qttools-tools \
+    qtscript \
+    qtserialport \
+    qt5-qml-presentation-system \
+    "
+
+RDEPENDS:${PN}-examples += " \
+    ${PN} \
+"
diff --git a/recipes-qt/qt5/qt5-qml-presentation-system.bb b/recipes-qt/qt5/qt5-qml-presentation-system.bb
new file mode 100644
index 0000000..164b408
--- /dev/null
+++ b/recipes-qt/qt5/qt5-qml-presentation-system.bb
@@ -0,0 +1,22 @@
+SUMMARY = "Qt5 qml presentation system"
+DESCRIPTION = "Quick tour of Qt 5.0, primarily focusing on its graphical capabilities."
+HOMEPAGE = "https://code.qt.io/cgit/qt-labs/"
+LICENSE = "LGPL-2.1-only"
+
+# This package actually has no License file. Below is dummy info to build
+LIC_FILES_CHKSUM = "file://presentation.pro;md5=fcb836475bffdd2776009a329c13b560"
+
+DEPENDS = "qtdeclarative"
+
+SRCREV = "860804a58bf47eaecdcc1acf81620bb998bf8cbf"
+SRC_URI = "git://code.qt.io/qt-labs/qml-presentation-system.git;branch=master"
+
+S = "${WORKDIR}/git"
+
+do_install() {
+     install -d ${D}${libdir}/qt5/qml/Qt/labs/presentation
+     install -m 644 ${S}/src/* ${D}${libdir}/qt5/qml/Qt/labs/presentation/
+}
+
+FILES:${PN} += "${datadir} ${libdir}/*"
+
diff --git a/recipes-qt/qt5/qtbase_git.bbappend b/recipes-qt/qt5/qtbase_git.bbappend
new file mode 100644
index 0000000..9fcd92f
--- /dev/null
+++ b/recipes-qt/qt5/qtbase_git.bbappend
@@ -0,0 +1,43 @@
+do_install:append:class-target() {
+    sed -i -e 's|${S}||g' ${B}/tests/auto/dbus/qdbusabstractinterface/qdbusabstractinterface/pinger_interface.cpp
+    sed -i -e 's|${S}||g' ${B}/tests/auto/dbus/qdbusabstractinterface/qdbusabstractinterface/pinger_interface.h
+}
+
+# switch to GLES 2 support
+PACKAGECONFIG_GL = "${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)}"
+
+DEP = " mtdev libxkbcommon freetype fontconfig libinput libproxy"
+
+RDEPENDS:${PN} += "${DEP}"
+RDEPENDS:${PN}-plugins += "${DEP}"
+RDEPENDS:${PN}-examples += "${DEP}"
+
+# add necessary packages
+PACKAGECONFIG:append = " fontconfig sql-sqlite sql-sqlite openssl icu accessibility examples sm linuxfb gles2 glib gif"
+
+# Select wayland as the default platform abstraction plugin for Qt
+CONF_ADD_X11 = "${@bb.utils.contains('DISTRO_FEATURES', 'x11', ' -qpa xcb -xcb -xcb-xlib -system-xcb -eglfs', '', d)}"
+CONF_ADD_WAYLAND = "${@bb.utils.contains('DISTRO_FEATURES', 'wayland', ' -qpa wayland -no-xcb', '', d)}"
+
+PACKAGECONFIG_CONFARGS:append = "\
+	-no-kms \
+	-no-gbm \
+	-no-evdev \
+	-no-kms \
+	-no-sse2 \
+	-no-sse3 \
+	${CONF_ADD_WAYLAND} \
+"
+
+# nis option is not supported anymore, disable it here
+PACKAGECONFIG[nis] = ""
+
+PACKAGECONFIG_GL:append = " eglfs gbm kms "
+
+QT_CONFIG_FLAGS += "--no-feature-getentropy"
+QT_CONFIG_FLAGS += "-no-qpa-platform-guard ${@bb.utils.contains('DISTRO_FEATURES', 'ld-is-gold', '-use-gold-linker', '-no-use-gold-linker', d)}"
+PACKAGECONFIG_X11 = "${@bb.utils.contains('DISTRO_FEATURES', 'x11', 'xcb glib xkbcommon', 'xkbcommon', d)}"
+OPENSSL_LINKING_MODE = "-linked"
+
+DEPENDS += "gstreamer1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-bad"
+
diff --git a/recipes-qt/qt5/qtdeclarative_git.bbappend b/recipes-qt/qt5/qtdeclarative_git.bbappend
new file mode 100644
index 0000000..0a71584
--- /dev/null
+++ b/recipes-qt/qt5/qtdeclarative_git.bbappend
@@ -0,0 +1,7 @@
+INSANE_SKIP:${PN}-ptest += "buildpaths"
+do_install:append:class-target() {
+     sed -i -e 's|${TMPDIR}||g' ${B}/include/QtQml/5.15.13/QtQml/private/qqmljsparser_p.h
+     sed -i -e 's|${TMPDIR}||g' ${D}/usr/include/qt5/QtQml/5.15.13/QtQml/private/qqmljsparser_p.h
+}
+
+
diff --git a/recipes-qt/qt5/qtlocation_git.bbappend b/recipes-qt/qt5/qtlocation_git.bbappend
new file mode 100644
index 0000000..d46ba52
--- /dev/null
+++ b/recipes-qt/qt5/qtlocation_git.bbappend
@@ -0,0 +1,4 @@
+do_install:append:class-target() {
+    sed -i -e 's|${TMPDIR}||g' ${B}/src/plugins/position/geoclue/*
+    sed -i -e 's|${TMPDIR}||g' ${B}/src/plugins/position/geoclue2/*
+}
diff --git a/recipes-qt/qt5/qtmultimedia_git.bbappend b/recipes-qt/qt5/qtmultimedia_git.bbappend
new file mode 100644
index 0000000..ef3ffac
--- /dev/null
+++ b/recipes-qt/qt5/qtmultimedia_git.bbappend
@@ -0,0 +1,12 @@
+PACKAGECONFIG:append = " gstreamer alsa"
+
+RDEPENDS:${PN}-plugins += " \
+	gstreamer1.0 \
+	gstreamer1.0-libav \
+	gstreamer1.0-plugins-base \
+	gstreamer1.0-plugins-base-app \
+	gstreamer1.0-plugins-good \
+	gstreamer1.0-plugins-good-video4linux2 \
+	gstreamer1.0-plugins-bad \
+	libgstbasecamerabinsrc-1.0 \
+"
diff --git a/recipes-qt/qt5/qtsensors_git.bbappend b/recipes-qt/qt5/qtsensors_git.bbappend
new file mode 100644
index 0000000..df105b8
--- /dev/null
+++ b/recipes-qt/qt5/qtsensors_git.bbappend
@@ -0,0 +1,4 @@
+do_install:append:class-target() {
+    sed -i -e 's|${TMPDIR}||g' ${B}/src/plugins/sensors/iio-sensor-proxy/*
+}
+
diff --git a/recipes-qt/qt5/qttools_git.bbappend b/recipes-qt/qt5/qttools_git.bbappend
new file mode 100644
index 0000000..d637abd
--- /dev/null
+++ b/recipes-qt/qt5/qttools_git.bbappend
@@ -0,0 +1 @@
+INSANE_SKIP:${PN}-dbg += "buildpaths"
diff --git a/recipes-qt/qt5/qtxmlpatterns_git.bbappend b/recipes-qt/qt5/qtxmlpatterns_git.bbappend
new file mode 100644
index 0000000..c734bc3
--- /dev/null
+++ b/recipes-qt/qt5/qtxmlpatterns_git.bbappend
@@ -0,0 +1 @@
+INSANE_SKIP:${PN}-ptest += "buildpaths"
